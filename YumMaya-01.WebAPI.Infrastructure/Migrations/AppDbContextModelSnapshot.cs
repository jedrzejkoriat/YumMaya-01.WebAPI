// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YumMaya_01.WebAPI.Infrastructure.Persistence;

#nullable disable

namespace YumMaya_01.WebAPI.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.19");

            modelBuilder.Entity("YumMaya_01.WebAPI.Domain.Models.Recipe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int?>("CookingTime")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("Difficulty")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Ingredients")
                        .HasMaxLength(10000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Instructions")
                        .HasMaxLength(100000)
                        .HasColumnType("TEXT");

                    b.Property<string>("MainImagePath")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<int?>("PreparationTime")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PreviewImagePath")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReelUrl")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Servings")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("YumMaya_01.WebAPI.Domain.Models.RecipeTag", b =>
                {
                    b.Property<Guid>("RecipeId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TagId")
                        .HasColumnType("TEXT");

                    b.HasKey("RecipeId", "TagId");

                    b.HasIndex("RecipeId");

                    b.HasIndex("TagId");

                    b.ToTable("RecipeTags");
                });

            modelBuilder.Entity("YumMaya_01.WebAPI.Domain.Models.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4ee7389d-20b3-4d65-beaa-ebd8c5d984f9"),
                            Name = "Proteinowy"
                        },
                        new
                        {
                            Id = new Guid("262d6aa6-41ee-4824-8769-07a397dbcdc0"),
                            Name = "Wegański"
                        },
                        new
                        {
                            Id = new Guid("462ec5fc-d3cc-4ef6-b9a2-4ec049bca6dd"),
                            Name = "Wegetariański"
                        },
                        new
                        {
                            Id = new Guid("6557296d-8bc7-495f-8c78-ed90702d7587"),
                            Name = "Bezglutenowy"
                        },
                        new
                        {
                            Id = new Guid("20db370a-bc89-4594-a32d-f541f116d022"),
                            Name = "Słodki"
                        },
                        new
                        {
                            Id = new Guid("8f7bcfa2-686a-4cfd-b5e4-963d1fddc9b3"),
                            Name = "Ostry"
                        },
                        new
                        {
                            Id = new Guid("005d9684-7f2e-47eb-885b-027eac046e57"),
                            Name = "Wytrawny"
                        },
                        new
                        {
                            Id = new Guid("128d75d6-6184-4e24-b182-d5882805a2f2"),
                            Name = "Fit"
                        },
                        new
                        {
                            Id = new Guid("aa0ebb7a-3061-4b76-87b2-02ef97154bf5"),
                            Name = "Keto"
                        });
                });

            modelBuilder.Entity("YumMaya_01.WebAPI.Domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("YumMaya_01.WebAPI.Domain.Models.RecipeTag", b =>
                {
                    b.HasOne("YumMaya_01.WebAPI.Domain.Models.Recipe", "Recipe")
                        .WithMany("RecipeTags")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YumMaya_01.WebAPI.Domain.Models.Tag", "Tag")
                        .WithMany("RecipeTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("YumMaya_01.WebAPI.Domain.Models.Recipe", b =>
                {
                    b.Navigation("RecipeTags");
                });

            modelBuilder.Entity("YumMaya_01.WebAPI.Domain.Models.Tag", b =>
                {
                    b.Navigation("RecipeTags");
                });
#pragma warning restore 612, 618
        }
    }
}
